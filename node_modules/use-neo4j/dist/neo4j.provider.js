"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Neo4jProvider = void 0;
var react_1 = __importStar(require("react"));
var login_1 = require("./components/login");
var neo4j_context_1 = require("./neo4j.context");
var driver_1 = require("./driver");
exports.Neo4jProvider = function (props) {
    var _a = react_1.useState(true), authenticating = _a[0], setAuthenticating = _a[1];
    var _b = react_1.useState({}), config = _b[0], setConfig = _b[1];
    var _c = react_1.useState(props.driver), driver = _c[0], setDriver = _c[1];
    var _d = react_1.useState(), error = _d[0], setError = _d[1];
    var _e = react_1.useState(props.database), database = _e[0], setDatabase = _e[1];
    var updateConnection = function (config) {
        setConfig(config);
        setDatabase(database);
        var newDriver = driver_1.createDriver(config.scheme, config.host, config.port, config.username, config.password);
        newDriver.verifyConnectivity()
            .then(function () { return setDriver(newDriver); })
            .catch(function (e) { return setError(e); });
    };
    // Test driver passed as a prop
    react_1.useEffect(function () {
        if (props.driver) {
            props.driver.verifyConnectivity()
                .catch(function (e) { return setError(e); })
                .finally(function () {
                setDriver(props.driver);
                setAuthenticating(false);
            });
        }
        else {
            setAuthenticating(false);
        }
    }, [driver]);
    // Wait for effect to verify driver connectivity
    if (authenticating) {
        return (react_1.default.createElement("div", { className: "authenticating" }));
    }
    if (!driver) {
        var title = props.title, logo = props.logo, details = props.details, footer = props.footer;
        return (react_1.default.createElement(login_1.Login, __assign({ error: error, title: title, logo: logo, details: details, footer: footer, showActive: props.showActive, showHost: props.showHost, showDatabase: props.showDatabase, onSubmit: updateConnection }, props)));
    }
    return (react_1.default.createElement(neo4j_context_1.Neo4jContext.Provider, { value: { driver: driver, config: config, database: database, updateConnection: updateConnection, setDatabase: setDatabase, } }, props.children));
};
