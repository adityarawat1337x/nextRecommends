"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.LoginForm = void 0;
var react_1 = __importStar(require("react"));
var form_items_1 = require("./form-items");
var neo4j_constants_1 = require("../neo4j.constants");
var schemeMap = neo4j_constants_1.schemes.map(function (scheme) { return ({
    key: scheme,
    id: scheme,
    value: scheme,
}); });
exports.LoginForm = function (_a) {
    var classNames = _a.classNames, onSubmit = _a.onSubmit, showHost = _a.showHost, showDatabase = _a.showDatabase, props = __rest(_a, ["classNames", "onSubmit", "showHost", "showDatabase"]);
    var _b = react_1.useState(props.scheme || 'neo4j'), scheme = _b[0], setScheme = _b[1];
    var _c = react_1.useState(props.host || 'localhost'), host = _c[0], setHost = _c[1];
    var _d = react_1.useState(props.port || 7687), port = _d[0], setPort = _d[1];
    var _e = react_1.useState(props.username || 'neo4j'), username = _e[0], setUsername = _e[1];
    var _f = react_1.useState(props.password || 'neo'), password = _f[0], setPassword = _f[1];
    var _g = react_1.useState(props.database), database = _g[0], setDatabase = _g[1];
    var handleSchemeChange = function (selected) { return setScheme(selected.value); };
    var handleSubmit = function () {
        onSubmit({ scheme: scheme, host: host, port: port, username: username, password: password, database: database });
    };
    return (react_1.default.createElement("div", null,
        (showHost === undefined || !!showHost) && react_1.default.createElement("div", { className: classNames.loginServerGroup },
            react_1.default.createElement(form_items_1.FormSelect, { classNames: classNames, id: "scheme", label: "Scheme", options: schemeMap, value: scheme, setter: handleSchemeChange }),
            react_1.default.createElement(form_items_1.FormInput, { classNames: classNames, id: "host", label: "Host", value: host, setter: setHost }),
            react_1.default.createElement(form_items_1.FormInput, { classNames: classNames, id: "port", label: "Port", value: port, setter: setPort })),
        react_1.default.createElement(form_items_1.FormInput, { classNames: classNames, id: "username", label: "Username", value: username, setter: setUsername }),
        react_1.default.createElement(form_items_1.FormInput, { classNames: classNames, id: "password", label: "Password", value: password, setter: setPassword, type: "password" }),
        (showDatabase === undefined || !!showDatabase) && react_1.default.createElement(form_items_1.FormInput, { classNames: classNames, id: "database", label: "Database", value: database, setter: setDatabase }),
        react_1.default.createElement("div", { className: classNames.formButtons },
            react_1.default.createElement(form_items_1.FormButton, { text: "Connect to Neo4j", className: classNames.formButtonPrimary, onClick: handleSubmit }))));
};
