import Head from "next/head";
import styles from "../styles/Home.module.css";
import { React, useState } from "react";
import { useReadCypher } from "use-neo4j";
import { Grid, GridItem, Box, Button, Heading } from "@chakra-ui/react";
import { Flex } from "@chakra-ui/react";
import Avatar from "react-avatar";
import Link from "next/link";
import { motion } from "framer-motion";

export default function Home() {
  const details = (uid) => {
    console.log(uid);
    setUid(uid);
  };

  const query = `match (u:Users) return u limit 200`;

  const { loading, error, records, first } = useReadCypher(query);

  if (loading)
    return (
      <Button
        isLoading
        loadingText="Loading users"
        colorScheme="teal"
        variant="outline"
        spinnerPlacement="end"
        border="0"
        w="100vw"
        h="100vh"
        alignItems="center"
        justifyContent="center"
        fontSize="3xl"
      ></Button>
    );

  return (
    <motion.div
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      transition={{ delay: 0.2 }}
      className={styles.container}
    >
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Flex
        w="100vw"
        justifyContent="center"
        alignItems="center"
        flexDirection="column"
        p={100}
      >
        <Heading>Movie Recommendation</Heading>
        <Heading fontSize="lg">Select a user ðŸ‘‡</Heading>
        <Grid
          templateColumns="repeat(7, 1fr)"
          bg="white"
          gap={6}
          h="700px"
          overflow="scroll"
          p={50}
          borderRadius="10"
          m={50}
        >
          {records &&
            records.map((row) => {
              return (
                <Link
                  href={{
                    pathname: `/movies/[id]`,
                    query: {
                      id: row.get("u").properties.user_id,
                    },
                  }}
                >
                  <GridItem
                    key={row.get("u").properties.user_id}
                    // onClick={() => {
                    //   details(row.get("u").properties.user_id);
                    // }}
                  >
                    <Box
                      maxW="sm"
                      borderWidth="1px"
                      overflow="hidden"
                      bg="#3b4152"
                      textAlign="center"
                      p={2}
                      borderRadius="10"
                    >
                      <Avatar
                        round={true}
                        name={row.get("u").properties.occupation}
                      ></Avatar>
                      <Box
                        mt="1"
                        fontWeight="semibold"
                        as="h4"
                        color="#ffffff"
                        lineHeight="tight"
                        textTransform="capitalize"
                      >
                        {row.get("u").properties.occupation}
                      </Box>
                    </Box>
                  </GridItem>
                </Link>
              );
            })}
        </Grid>
      </Flex>
    </motion.div>
  );
}
